diff --git a/node_modules/ipfs-http-client/esm/src/block/put.js b/node_modules/ipfs-http-client/esm/src/block/put.js
index 703ed36..c4cc7fd 100644
--- a/node_modules/ipfs-http-client/esm/src/block/put.js
+++ b/node_modules/ipfs-http-client/esm/src/block/put.js
@@ -6,6 +6,12 @@ import { abortSignal } from '../lib/abort-signal.js';
 import { AbortController } from 'native-abort-controller';
 export const createPut = configure(api => {
   async function put(data, options = {}) {
+    if(options.format==="dag-cbor"){
+      options.format="cbor"
+    }
+    if(options.format==="dag-pb"){
+      options.format="protobuf"
+    }
     const controller = new AbortController();
     const signal = abortSignal(controller.signal, options.signal);
     let res;
diff --git a/node_modules/ipfs-http-client/esm/src/dag/put.js b/node_modules/ipfs-http-client/esm/src/dag/put.js
index f7e12e0..45e6d23 100644
--- a/node_modules/ipfs-http-client/esm/src/dag/put.js
+++ b/node_modules/ipfs-http-client/esm/src/dag/put.js
@@ -7,10 +7,16 @@ import { AbortController } from 'native-abort-controller';
 export const createPut = (codecs, options) => {
   const fn = configure(api => {
     const put = async (dagNode, options = {}) => {
+      // const settings = {
+      //   format: 'dag-cbor',
+      //   hashAlg: 'sha2-256',
+      //   inputEnc: 'raw',
+      //   ...options
+      // };
       const settings = {
-        format: 'dag-cbor',
+        storeCodec: 'dag-cbor',
         hashAlg: 'sha2-256',
-        inputEnc: 'raw',
+        inputCodec: 'raw',
         ...options
       };
       const codec = await codecs.getCodec(settings.format);
